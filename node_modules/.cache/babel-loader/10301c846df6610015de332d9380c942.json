{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wel\\\\unefti-version\\\\unefti-version\\\\src\\\\userjourney\\\\resuable-components\\\\Password.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport InputField from \"../resuable-components/InputField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Password({\n  passwordIsValid,\n  label,\n  isValidationRequired\n}) {\n  _s();\n\n  const [state, setState] = useState({\n    password: \"\",\n    isValid: true\n  });\n\n  const validatePassword = password => {\n    if (!(password === \"\" || password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$!%*?&])[A-Za-z\\d@$#!%*?&]{8,}$/))) return false;else return true;\n  };\n\n  const handleChange = event => {\n    const password = event.target.value;\n    setState(prevState => ({ ...prevState,\n      password\n    }));\n    passwordIsValid(password);\n\n    if (isValidationRequired) {\n      if (validatePassword(password)) {\n        passwordIsValid(password, true);\n        setState(prevState => ({ ...prevState,\n          isValid: true\n        }));\n      } else {\n        passwordIsValid(password, false);\n        setState(prevState => ({ ...prevState,\n          isValid: false\n        }));\n      }\n    }\n  };\n\n  const {\n    password,\n    isValid\n  } = state;\n  return /*#__PURE__*/_jsxDEV(InputField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    value: password,\n    label: \"\",\n    type: \"password\",\n    id: \"password\",\n    placeholder: label,\n    autoComplete: \"current-password\",\n    error: isValid ? false : true,\n    helperText: isValid ? \"\" : \"*Password should be min 8 characters long, must contain atleast one uppercase letter, one lowercase letter, one number and one special character.\",\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Password, \"1474VIZbdPXoYzybYwXgRrB5xqs=\");\n\n_c = Password;\n\nvar _c;\n\n$RefreshReg$(_c, \"Password\");","map":{"version":3,"sources":["C:/Users/wel/unefti-version/unefti-version/src/userjourney/resuable-components/Password.js"],"names":["React","useState","InputField","Password","passwordIsValid","label","isValidationRequired","state","setState","password","isValid","validatePassword","match","handleChange","event","target","value","prevState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;AAEA,eAAe,SAASC,QAAT,CAAkB;AAC/BC,EAAAA,eAD+B;AAE/BC,EAAAA,KAF+B;AAG/BC,EAAAA;AAH+B,CAAlB,EAIZ;AAAA;;AACD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC;AACjCQ,IAAAA,QAAQ,EAAE,EADuB;AAEjCC,IAAAA,OAAO,EAAE;AAFwB,GAAD,CAAlC;;AAKA,QAAMC,gBAAgB,GAAIF,QAAD,IAAc;AACrC,QACE,EACEA,QAAQ,KAAK,EAAb,IACAA,QAAQ,CAACG,KAAT,CACE,wEADF,CAFF,CADF,EAQE,OAAO,KAAP,CARF,KASK,OAAO,IAAP;AACN,GAXD;;AAaA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAML,QAAQ,GAAGK,KAAK,CAACC,MAAN,CAAaC,KAA9B;AACAR,IAAAA,QAAQ,CAAES,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBR,MAAAA;AAFuB,KAAhB,CAAD,CAAR;AAIAL,IAAAA,eAAe,CAACK,QAAD,CAAf;;AACA,QAAGH,oBAAH,EAAwB;AACxB,UAAIK,gBAAgB,CAACF,QAAD,CAApB,EAAgC;AAC9BL,QAAAA,eAAe,CAACK,QAAD,EAAW,IAAX,CAAf;AACAD,QAAAA,QAAQ,CAAES,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBP,UAAAA,OAAO,EAAE;AAFc,SAAhB,CAAD,CAAR;AAID,OAND,MAMO;AACLN,QAAAA,eAAe,CAACK,QAAD,EAAW,KAAX,CAAf;AACAD,QAAAA,QAAQ,CAAES,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBP,UAAAA,OAAO,EAAE;AAFc,SAAhB,CAAD,CAAR;AAID;AACF;AACA,GAtBD;;AAwBA,QAAM;AAAED,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAwBH,KAA9B;AACA,sBACE,QAAC,UAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,MAJX;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,KAAK,EAAEE,QANT;AAOE,IAAA,KAAK,EAAC,EAPR;AAQE,IAAA,IAAI,EAAC,UARP;AASE,IAAA,EAAE,EAAC,UATL;AAUE,IAAA,WAAW,EAAEJ,KAVf;AAWE,IAAA,YAAY,EAAC,kBAXf;AAYE,IAAA,KAAK,EAAEK,OAAO,GAAG,KAAH,GAAW,IAZ3B;AAaE,IAAA,UAAU,EACRA,OAAO,GACH,EADG,GAEH,mJAhBR;AAkBE,IAAA,QAAQ,EAAEG;AAlBZ;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAtEuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport InputField from \"../resuable-components/InputField\";\n\nexport default function Password({\n  passwordIsValid,\n  label,\n  isValidationRequired\n}) {\n  const [state, setState] = useState({\n    password: \"\",\n    isValid: true,\n  });\n\n  const validatePassword = (password) => {\n    if (\n      !(\n        password === \"\" ||\n        password.match(\n          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$!%*?&])[A-Za-z\\d@$#!%*?&]{8,}$/\n        )\n      )\n    )\n      return false;\n    else return true;\n  };\n\n  const handleChange = (event) => {\n    const password = event.target.value;\n    setState((prevState) => ({\n      ...prevState,\n      password,\n    }));\n    passwordIsValid(password);\n    if(isValidationRequired){\n    if (validatePassword(password)) {\n      passwordIsValid(password, true);\n      setState((prevState) => ({\n        ...prevState,\n        isValid: true,\n      }));\n    } else {\n      passwordIsValid(password, false);\n      setState((prevState) => ({\n        ...prevState,\n        isValid: false,\n      }));\n    }\n  }\n  };\n\n  const { password, isValid } = state;\n  return (\n    <InputField\n      variant=\"outlined\"\n      margin=\"normal\"\n      required\n      fullWidth\n      name=\"password\"\n      value={password}\n      label=\"\"\n      type=\"password\"\n      id=\"password\"\n      placeholder={label}\n      autoComplete=\"current-password\"\n      error={isValid ? false : true}\n      helperText={\n        isValid\n          ? \"\"\n          : \"*Password should be min 8 characters long, must contain atleast one uppercase letter, one lowercase letter, one number and one special character.\"\n      }\n      onChange={handleChange}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}