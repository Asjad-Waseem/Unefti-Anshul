{"ast":null,"code":"import { login, socialLogin, authToken } from \"../../services/api\";\nexport const SET_AUTHED_USER = \"SET_AUTHED_USER\";\nexport const SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\";\nexport function setAuthedUser(authedUser) {\n  return {\n    type: SET_AUTHED_USER,\n    authedUser\n  };\n}\nexport function setAuthToken(authToken) {\n  return {\n    type: SET_AUTH_TOKEN,\n    authToken\n  };\n}\nexport function getUser(userCredentials) {\n  return dispatch => {\n    return login(userCredentials).then(authedUser => {\n      if (authedUser.error == undefined) authToken(authedUser.data.token).then(authToken => dispatch(setAuthToken(authToken)));\n      dispatch(setAuthedUser(authedUser));\n    });\n  };\n}\nexport function getUserFromSocialLogin(info) {\n  return dispatch => {\n    return socialLogin(info).then(authedUser => {\n      if (authedUser.error == undefined) authToken(authedUser.data.token).then(authToken => dispatch(setAuthToken(authToken)));\n      dispatch(setAuthedUser(authedUser));\n    });\n  };\n} // export function handleLogoutUser() {\n//   return (dispatch) => {\n//     dispatch(setLoading(true));\n//     return logout().then(resp => {\n//         //dispatch loading false\n//       dispatch(setLoading(false));\n//       if(resp.exception === null){\n//         dispatch(setAuthedUser(null))\n//       }\n//     });\n//   };\n// }","map":{"version":3,"sources":["C:/Users/wel/unefti-version/unefti-version/src/store/actions/authedUser.js"],"names":["login","socialLogin","authToken","SET_AUTHED_USER","SET_AUTH_TOKEN","setAuthedUser","authedUser","type","setAuthToken","getUser","userCredentials","dispatch","then","error","undefined","data","token","getUserFromSocialLogin","info"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,oBAA9C;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,SAASC,aAAT,CAAuBC,UAAvB,EAAmC;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,eADD;AAELG,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,YAAT,CAAsBN,SAAtB,EAAiC;AACtC,SAAO;AACLK,IAAAA,IAAI,EAAEH,cADD;AAELF,IAAAA;AAFK,GAAP;AAID;AACD,OAAO,SAASO,OAAT,CAAiBC,eAAjB,EAAkC;AACvC,SAAQC,QAAD,IAAc;AACnB,WAAOX,KAAK,CAACU,eAAD,CAAL,CAAuBE,IAAvB,CAA6BN,UAAD,IAAgB;AACjD,UAAIA,UAAU,CAACO,KAAX,IAAoBC,SAAxB,EACEZ,SAAS,CAACI,UAAU,CAACS,IAAX,CAAgBC,KAAjB,CAAT,CAAiCJ,IAAjC,CAAuCV,SAAD,IACpCS,QAAQ,CAACH,YAAY,CAACN,SAAD,CAAb,CADV;AAGFS,MAAAA,QAAQ,CAACN,aAAa,CAACC,UAAD,CAAd,CAAR;AACD,KANM,CAAP;AAOD,GARD;AASD;AAED,OAAO,SAASW,sBAAT,CAAgCC,IAAhC,EAAsC;AAC3C,SAAQP,QAAD,IAAc;AACnB,WAAOV,WAAW,CAACiB,IAAD,CAAX,CAAkBN,IAAlB,CAAwBN,UAAD,IAAgB;AAC5C,UAAIA,UAAU,CAACO,KAAX,IAAoBC,SAAxB,EACEZ,SAAS,CAACI,UAAU,CAACS,IAAX,CAAgBC,KAAjB,CAAT,CAAiCJ,IAAjC,CAAuCV,SAAD,IACpCS,QAAQ,CAACH,YAAY,CAACN,SAAD,CAAb,CADV;AAGFS,MAAAA,QAAQ,CAACN,aAAa,CAACC,UAAD,CAAd,CAAR;AACD,KANM,CAAP;AAOD,GARD;AASD,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { login, socialLogin, authToken } from \"../../services/api\";\n\nexport const SET_AUTHED_USER = \"SET_AUTHED_USER\";\nexport const SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\";\n\nexport function setAuthedUser(authedUser) {\n  return {\n    type: SET_AUTHED_USER,\n    authedUser,\n  };\n}\n\nexport function setAuthToken(authToken) {\n  return {\n    type: SET_AUTH_TOKEN,\n    authToken,\n  };\n}\nexport function getUser(userCredentials) {\n  return (dispatch) => {\n    return login(userCredentials).then((authedUser) => {\n      if (authedUser.error == undefined)\n        authToken(authedUser.data.token).then((authToken) =>\n          dispatch(setAuthToken(authToken))\n        );\n      dispatch(setAuthedUser(authedUser));\n    });\n  };\n}\n\nexport function getUserFromSocialLogin(info) {\n  return (dispatch) => {\n    return socialLogin(info).then((authedUser) => {\n      if (authedUser.error == undefined)\n        authToken(authedUser.data.token).then((authToken) =>\n          dispatch(setAuthToken(authToken))\n        );\n      dispatch(setAuthedUser(authedUser));\n    });\n  };\n}\n// export function handleLogoutUser() {\n//   return (dispatch) => {\n//     dispatch(setLoading(true));\n//     return logout().then(resp => {\n//         //dispatch loading false\n//       dispatch(setLoading(false));\n//       if(resp.exception === null){\n//         dispatch(setAuthedUser(null))\n//       }\n//     });\n//   };\n// }\n"]},"metadata":{},"sourceType":"module"}