{"ast":null,"code":"import endPoints from \"../config/apiConfig\"; //api's for user journey\n//signin\n\nexport const login = userCredentials => {\n  let reqObj = {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userCredentials)\n  };\n  const url = endPoints.login();\n  return fetch(url, reqObj).then(resp => resp.json());\n};\nexport const socialLogin = info => {\n  let reqObj = {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(info)\n  };\n  const url = endPoints.socialLogin();\n  return fetch(url, reqObj).then(resp => resp.json());\n}; //signup\n\nexport const signup = userInfo => {\n  let reqObj = {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(userInfo)\n  };\n  const url = endPoints.signup();\n  return fetch(url, reqObj).then(resp => {\n    if (resp.ok || resp.status === 400) return resp.json();\n    return Promise.reject(resp);\n  });\n};\nexport const authToken = loginToken => {\n  let reqObj = {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": loginToken\n    },\n    body: JSON.stringify({\n      \"userType\": \"coseller\"\n    })\n  };\n  const url = endPoints.getAuthToken();\n  return fetch(url, reqObj).then(resp => resp.json());\n};","map":{"version":3,"sources":["C:/Users/wel/unefti-version/unefti-version/src/services/api.js"],"names":["endPoints","login","userCredentials","reqObj","method","credentials","headers","body","JSON","stringify","url","fetch","then","resp","json","socialLogin","info","signup","userInfo","ok","status","Promise","reject","authToken","loginToken","getAuthToken"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,qBAAtB,C,CAEA;AAEA;;AACA,OAAO,MAAMC,KAAK,GAAIC,eAAD,IAAqB;AACxC,MAAIC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,WAAW,EAAE,aAFF;AAGXC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHE;AAMXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,eAAf;AANK,GAAb;AAQA,QAAMQ,GAAG,GAAGV,SAAS,CAACC,KAAV,EAAZ;AACA,SAAOU,KAAK,CAACD,GAAD,EAAMP,MAAN,CAAL,CAAmBS,IAAnB,CAAyBC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAAlC,CAAP;AACD,CAXM;AAaP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,MAAIb,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,WAAW,EAAE,aAFF;AAGXC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHE;AAMXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,IAAf;AANK,GAAb;AAQA,QAAMN,GAAG,GAAGV,SAAS,CAACe,WAAV,EAAZ;AACA,SAAOJ,KAAK,CAACD,GAAD,EAAMP,MAAN,CAAL,CAAmBS,IAAnB,CAAyBC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAAlC,CAAP;AACD,CAXM,C,CAaP;;AACA,OAAO,MAAMG,MAAM,GAAIC,QAAD,IAAc;AAClC,MAAIf,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,WAAW,EAAE,aAFF;AAGXC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAHE;AAMXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeS,QAAf;AANK,GAAb;AAQA,QAAMR,GAAG,GAAGV,SAAS,CAACiB,MAAV,EAAZ;AACA,SAAON,KAAK,CAACD,GAAD,EAAMP,MAAN,CAAL,CAAmBS,IAAnB,CAAyBC,IAAD,IAAU;AACvC,QAAIA,IAAI,CAACM,EAAL,IAAWN,IAAI,CAACO,MAAL,KAAgB,GAA/B,EAAoC,OAAOP,IAAI,CAACC,IAAL,EAAP;AACpC,WAAOO,OAAO,CAACC,MAAR,CAAeT,IAAf,CAAP;AACD,GAHM,CAAP;AAID,CAdM;AAgBP,OAAO,MAAMU,SAAS,GAAIC,UAAD,IAAgB;AACvC,MAAIrB,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,WAAW,EAAE,aAFF;AAGXC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAiBkB;AAFV,KAHE;AAOXjB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnB,kBAAY;AADO,KAAf;AAPK,GAAb;AAWA,QAAMC,GAAG,GAAGV,SAAS,CAACyB,YAAV,EAAZ;AACA,SAAOd,KAAK,CAACD,GAAD,EAAMP,MAAN,CAAL,CAAmBS,IAAnB,CAAyBC,IAAD,IAAUA,IAAI,CAACC,IAAL,EAAlC,CAAP;AACD,CAdM","sourcesContent":["import endPoints from \"../config/apiConfig\";\n\n//api's for user journey\n\n//signin\nexport const login = (userCredentials) => {\n  let reqObj = {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userCredentials),\n  };\n  const url = endPoints.login();\n  return fetch(url, reqObj).then((resp) => resp.json());\n};\n\nexport const socialLogin = (info) => {\n  let reqObj = {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(info),\n  };\n  const url = endPoints.socialLogin();\n  return fetch(url, reqObj).then((resp) => resp.json());\n};\n\n//signup\nexport const signup = (userInfo) => {\n  let reqObj = {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(userInfo),\n  };\n  const url = endPoints.signup();\n  return fetch(url, reqObj).then((resp) => {\n    if (resp.ok || resp.status === 400) return resp.json();\n    return Promise.reject(resp);\n  });\n};\n\nexport const authToken = (loginToken) => {\n  let reqObj = {\n    method: \"POST\",\n    credentials: \"same-origin\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": loginToken\n    },\n    body: JSON.stringify({\n      \"userType\": \"coseller\"\n    }),\n  };\n  const url = endPoints.getAuthToken();\n  return fetch(url, reqObj).then((resp) => resp.json());\n};\n"]},"metadata":{},"sourceType":"module"}